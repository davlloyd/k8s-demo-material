



- default: "1"
  description: The replicas for the jobservice component.
  key: jobservice.replicas
  type: integer
- default: ""
  description: Secret is used when job service communicates with other components.
  key: jobservice.secret
  type: string
- default: "true"
  description: Whether to install Notary
  key: notary.enabled
  type: boolean
- default: "443"
  description: The network port of the Envoy service in Contour or other Ingress Controller.
  key: port.https
  type: integer
- default: '"null"'
  description: The PSP names used by Harbor pods. The names are separated by ','.
    'null' means all PSP can be used.
  key: pspNames
  type: string
- default: ""
  description: The private key. Note that tls.key is a key and not nested.
  key: tlsCertificate.tls.key
  type: string
- default: ""
  description: the labels you want to add for the harbor-tls secret generated by the
    tlsCertificate
  key: tlsCertificate.tlsSecretLabels
  type: object
- default: ""
  description: The certificate of CA, this enables the download, link on portal to
    download the certificate of CA. Note that ca.crt is a key and not nested.
  key: tlsCertificate.ca.crt
  type: string
- default: ""
  description: The certificate. Note that tls.crt is a key and not nested.
  key: tlsCertificate.tls.crt
  type: string
- default: ""
  description: The custom ca bundle secret, the secret must contain key named "ca.crt",
    which will be injected into the trust store for core, jobservice, registry, trivy
    components
  key: caBundleSecretName
  type: string
- default: ""
  description: Timeout for how long the proxy should wait while there is no activity
    during single request/response (for HTTP/1.1) or stream (for HTTP/2).
  key: contourHttpProxy.idleTimeout
  type: string
- default: ""
  description: Timeout for receiving a response from the server after processing a
    request from client.
  key: contourHttpProxy.timeout
  type: string
- default: "true"
  description: Use contour http proxy instead of the ingress when it's true.
  key: enableContourHttpProxy
  type: boolean
- default: "true"
  description: Whether to install Trivy scanner.
  key: trivy.enabled
  type: boolean
- default: '""'
  description: the GitHub access token to download Trivy DB.
  key: trivy.gitHubToken
  type: string
- default: "false"
  description: The offlineScan option prevents Trivy from sending API requests to
    identify dependencies.
  key: trivy.offlineScan
  type: boolean
- default: "1"
  description: The replicas for the trivy component.
  key: trivy.replicas
  type: integer
- default: "false"
  description: The flag to disable Trivy DB downloads from GitHub.
  key: trivy.skipUpdate
  type: boolean
- default: '""'
  description: The timeout set for trivy scanner, it should be a number followed by
    a letter like "h", "m", "s", or "ms", i.e. 1h, 5m, 60s, 1000ms.
  key: trivy.timeout
  type: string
- default: info
  description: The log level of core, exporter, jobservice, registry.
  key: logLevel
  type: string
- default: ""
  description: The attributes is a key value dict contains user defined attributes
    used to initialize trace provider.
  key: trace.attributes
  type: object
- default: "false"
  description: Enable tracing for Harbor.
  key: trace.enabled
  type: boolean
- default: ""
  description: The agent_port of jaeger in agent mode.
  key: trace.jaeger.agent_port
  type: integer
- default: http://hostname:14268/api/traces
  description: The endpoint of jaeger.
  key: trace.jaeger.endpoint
  type: string
- default: ""
  description: The password of jaeger in collector mode.
  key: trace.jaeger.password
  type: string
- default: ""
  description: The username of jaeger in collector mode.
  key: trace.jaeger.username
  type: string
- default: ""
  description: The agent_host of jaeger in agent mode.
  key: trace.jaeger.agent_host
  type: string
- default: ""
  description: The namespace used to differentiate different harbor services.
  key: trace.namespace
  type: string
- default: "false"
  description: Whether to set compression when enabling tracing with Otel.
  key: trace.otel.compression
  type: boolean
- default: hostname:4318
  description: The endpoint of otel.
  key: trace.otel.endpoint
  type: string
- default: "true"
  description: Whether to connect the collector insecurely.
  key: trace.otel.insecure
  type: boolean
- default: "10"
  description: The max waiting time for the backend to process each spans batch, in
    seconds.
  key: trace.otel.timeout
  type: integer
- default: /v1/traces
  description: The url path of tracing with Otel.
  key: trace.otel.url_path
  type: string
- default: jaeger
  description: The provider type of tracing, jaeger or otel.
  key: trace.provider
  type: string
- default: "1"
  description: Set sample_rate to 1 if you wanna sampling 100% of trace data; set
    0.5 if you wanna sampling 50% of trace data, and so forth.
  key: trace.sample_rate
  type: number
- default: ""
  description: The initial password of Harbor admin.
  key: harborAdminPassword
  type: string
- default: "false"
  description: Enable the metrics when it's true
  key: metrics.enabled
  type: boolean
- default: /metrics
  description: The path of the metrics.
  key: metrics.exporter.path
  type: string
- default: "8001"
  description: The port of the metrics.
  key: metrics.exporter.port
  type: integer
- default: "8001"
  description: The port of the metrics.
  key: metrics.jobservice.port
  type: integer
- default: /metrics
  description: The path of the metrics.
  key: metrics.jobservice.path
  type: string
- default: /metrics
  description: The path of the metrics.
  key: metrics.registry.path
  type: string
- default: "8001"
  description: The port of the metrics.
  key: metrics.registry.port
  type: integer
- default: /metrics
  description: The path of the metrics.
  key: metrics.core.path
  type: string
- default: "8001"
  description: The port of the metrics.
  key: metrics.core.port
  type: integer
- default: ""
  description: The array of network ipFamilies. Default [] is equivalent to have both
    ["IPv4","IPv6"]. Or you can choose one of ["IPv4"] or ["IPv6"]
  key: network.ipFamilies
  type: array
- default: accesskeysecret
  description: Access key secert of oss.
  key: persistence.imageChartStorage.oss.accesskeysecret
  type: string
- default: bucketname
  description: Bucket name of oss.
  key: persistence.imageChartStorage.oss.bucket
  type: string
- default: ""
  description: Chunk size for the oss, eg 10M.
  key: persistence.imageChartStorage.oss.chunksize
  type: string
- default: regionname
  description: Region of oss.
  key: persistence.imageChartStorage.oss.region
  type: string
- default: ""
  description: The rootdirectory in oss.
  key: persistence.imageChartStorage.oss.rootdirectory
  type: string
- default: ""
  description: Secure of oss.
  key: persistence.imageChartStorage.oss.secure
  type: boolean
- default: accesskeyid
  description: Access key id of oss.
  key: persistence.imageChartStorage.oss.accesskeyid
  type: string
- default: ""
  description: Encrypt of oss.
  key: persistence.imageChartStorage.oss.encrypt
  type: boolean
- default: ""
  description: Endpoint of oss.
  key: persistence.imageChartStorage.oss.endpoint
  type: string
- default: ""
  description: Use the internal endpoint when it's true.
  key: persistence.imageChartStorage.oss.internal
  type: boolean
- default: ""
  description: Temp url methods of swift.
  key: persistence.imageChartStorage.swift.tempurlmethods
  type: string
- default: containername
  description: Container of swift.
  key: persistence.imageChartStorage.swift.container
  type: string
- default: ""
  description: Domain id of swift.
  key: persistence.imageChartStorage.swift.domainid
  type: string
- default: password
  description: Password of swift.
  key: persistence.imageChartStorage.swift.password
  type: string
- default: ""
  description: Check size of swift, eg 5M.
  key: persistence.imageChartStorage.swift.chunksize
  type: string
- default: ""
  description: Ignore the cert verify when it's true.
  key: persistence.imageChartStorage.swift.insecureskipverify
  type: boolean
- default: ""
  description: Secret key of swift.
  key: persistence.imageChartStorage.swift.secretkey
  type: string
- default: ""
  description: Use temp url container key of swift when it's true.
  key: persistence.imageChartStorage.swift.tempurlcontainerkey
  type: boolean
- default: ""
  description: Tenant of swift.
  key: persistence.imageChartStorage.swift.tenant
  type: string
- default: ""
  description: Tenant id of swift.
  key: persistence.imageChartStorage.swift.tenantid
  type: string
- default: username
  description: Username of swift.
  key: persistence.imageChartStorage.swift.username
  type: string
- default: ""
  description: Access key of swift.
  key: persistence.imageChartStorage.swift.accesskey
  type: string
- default: ""
  description: Endpoint type of swift, eg public.
  key: persistence.imageChartStorage.swift.endpointtype
  type: string
- default: ""
  description: Region of swift.
  key: persistence.imageChartStorage.swift.region
  type: string
- default: ""
  description: Prefix path of swift.
  key: persistence.imageChartStorage.swift.prefix
  type: string
- default: ""
  description: Trust id of swift.
  key: persistence.imageChartStorage.swift.trustid
  type: string
- default: https://storage.myprovider.com/v3/auth
  description: Auth url of swift.
  key: persistence.imageChartStorage.swift.authurl
  type: string
- default: ""
  description: Auth version of swift.
  key: persistence.imageChartStorage.swift.authversion
  type: string
- default: ""
  description: Domain of swift.
  key: persistence.imageChartStorage.swift.domain
  type: string
- default: bucketname
  description: Bucket name of gcs.
  key: persistence.imageChartStorage.gcs.bucket
  type: string
- default: "5.24288e+06"
  description: Check size for gcs.
  key: persistence.imageChartStorage.gcs.chunksize
  type: integer
- default: base64-encoded-json-key-file
  description: The base64 encoded json file which contains the key
  key: persistence.imageChartStorage.gcs.encodedkey
  type: string
- default: ""
  description: The rootdirectory in gcs.
  key: persistence.imageChartStorage.gcs.rootdirectory
  type: string
- default: "true"
  description: Use v4auth for s3 when it's true.
  key: persistence.imageChartStorage.s3.v4auth
  type: boolean
- default: ""
  description: Access key of s3.
  key: persistence.imageChartStorage.s3.accesskey
  type: string
- default: ""
  description: Check size for s3.
  key: persistence.imageChartStorage.s3.chunksize
  type: integer
- default: ""
  description: multi part copy threshold size of s3.
  key: persistence.imageChartStorage.s3.multipartcopythresholdsize
  type: integer
- default: ""
  description: Secret key of s3.
  key: persistence.imageChartStorage.s3.secretkey
  type: string
- default: ""
  description: Keyid of s3.
  key: persistence.imageChartStorage.s3.keyid
  type: string
- default: ""
  description: multi part copy max concurrency of s3.
  key: persistence.imageChartStorage.s3.multipartcopymaxconcurrency
  type: integer
- default: ""
  description: Region endpoint of s3, eg http://myobjects.local
  key: persistence.imageChartStorage.s3.regionendpoint
  type: string
- default: "false"
  description: skipverify for s3.
  key: persistence.imageChartStorage.s3.skipverify
  type: boolean
- default: bucketname
  description: Bucket name of s3.
  key: persistence.imageChartStorage.s3.bucket
  type: string
- default: "true"
  description: Secure for s3.
  key: persistence.imageChartStorage.s3.secure
  type: boolean
- default: STANDARD
  description: Storage class of s3.
  key: persistence.imageChartStorage.s3.storageclass
  type: string
- default: "false"
  description: Encrypt for s3.
  key: persistence.imageChartStorage.s3.encrypt
  type: boolean
- default: ""
  description: multi part copy chunk size of s3.
  key: persistence.imageChartStorage.s3.multipartcopychunksize
  type: integer
- default: us-west-1
  description: Region of s3.
  key: persistence.imageChartStorage.s3.region
  type: string
- default: ""
  description: The rootdirectory in s3.
  key: persistence.imageChartStorage.s3.rootdirectory
  type: string
- default: filesystem
  description: |-
    Specify the type of storage: "filesystem", "azure", "gcs", "s3", "swift",
    "oss" and fill the information needed in the corresponding section. The type
    must be "filesystem" if you want to use persistent volumes for registry
    and chartmuseum
  key: persistence.imageChartStorage.type
  type: string
- default: base64encodedaccountkey
  description: Account key of azure storage.
  key: persistence.imageChartStorage.azure.accountkey
  type: string
- default: accountname
  description: Account name of azure storage.
  key: persistence.imageChartStorage.azure.accountname
  type: string
- default: containername
  description: Container name of azure storage.
  key: persistence.imageChartStorage.azure.container
  type: string
- default: core.windows.net
  description: Realm for azure storage.
  key: persistence.imageChartStorage.azure.realm
  type: string
- default: '""'
  description: |-
    Specify the "caBundleSecretName" if the storage service uses a self-signed certificate.
    The secret must contain keys named "ca.crt" which will be injected into the trust store
    of registry's and chartmuseum's containers.
  key: persistence.imageChartStorage.caBundleSecretName
  type: string
- default: "false"
  description: |-
    Specify whether to disable `redirect` for images and chart storage, for
    backends which not supported it (such as using minio for `s3` storage type), please disable
    it. To disable redirects, simply set `disableredirect` to `true` instead.
    Refer to
    https://github.com/docker/distribution/blob/master/docs/configuration.md#redirect
    for the detail.
  key: persistence.imageChartStorage.disableredirect
  type: boolean
- default: "100"
  description: Max threads for filesystem.
  key: persistence.imageChartStorage.filesystem.maxthreads
  type: integer
- default: /storage
  description: The rootdirectory in filesystem.
  key: persistence.imageChartStorage.filesystem.rootdirectory
  type: string
- default: ReadWriteOnce
  description: Access mode of the PVC.
  key: persistence.persistentVolumeClaim.trivy.accessMode
  type: string
- default: '""'
  description: |-
    Use the existing PVC which must be created manually before bound,
    and specify the "subPath" if the PVC is shared with other components
  key: persistence.persistentVolumeClaim.trivy.existingClaim
  type: string
- default: 5Gi
  description: Size of the PVC.
  key: persistence.persistentVolumeClaim.trivy.size
  type: string
- default: '""'
  description: |-
    Specify the "storageClass" used to provision the volume. Or the default
    StorageClass will be used(the default).
    Set it to "-" to disable dynamic provisioning
  key: persistence.persistentVolumeClaim.trivy.storageClass
  type: string
- default: '""'
  description: The "subPath" if the PVC is shared with other components.
  key: persistence.persistentVolumeClaim.trivy.subPath
  type: string
- default: '""'
  description: The "subPath" if the PVC is shared with other components.
  key: persistence.persistentVolumeClaim.database.subPath
  type: string
- default: ReadWriteOnce
  description: Access mode of the PVC.
  key: persistence.persistentVolumeClaim.database.accessMode
  type: string
- default: '""'
  description: |-
    Use the existing PVC which must be created manually before bound,
    and specify the "subPath" if the PVC is shared with other components
  key: persistence.persistentVolumeClaim.database.existingClaim
  type: string
- default: 1Gi
  description: Size of the PVC.
  key: persistence.persistentVolumeClaim.database.size
  type: string
- default: '""'
  description: |-
    Specify the "storageClass" used to provision the volume. Or the default
    StorageClass will be used(the default).
    Set it to "-" to disable dynamic provisioning
  key: persistence.persistentVolumeClaim.database.storageClass
  type: string
- default: ReadWriteOnce
  description: Access mode of the PVC.
  key: persistence.persistentVolumeClaim.jobservice.jobLog.accessMode
  type: string
- default: '""'
  description: |-
    Use the existing PVC which must be created manually before bound,
    and specify the "subPath" if the PVC is shared with other components
  key: persistence.persistentVolumeClaim.jobservice.jobLog.existingClaim
  type: string
- default: 1Gi
  description: Size of the PVC.
  key: persistence.persistentVolumeClaim.jobservice.jobLog.size
  type: string
- default: '""'
  description: |-
    Specify the "storageClass" used to provision the volume. Or the default
    StorageClass will be used(the default).
    Set it to "-" to disable dynamic provisioning
  key: persistence.persistentVolumeClaim.jobservice.jobLog.storageClass
  type: string
- default: '""'
  description: The "subPath" if the PVC is shared with other components.
  key: persistence.persistentVolumeClaim.jobservice.jobLog.subPath
  type: string
- default: '""'
  description: |-
    Specify the "storageClass" used to provision the volume. Or the default
    StorageClass will be used(the default).
    Set it to "-" to disable dynamic provisioning
  key: persistence.persistentVolumeClaim.redis.storageClass
  type: string
- default: '""'
  description: The "subPath" if the PVC is shared with other components.
  key: persistence.persistentVolumeClaim.redis.subPath
  type: string
- default: ReadWriteOnce
  description: Access mode of the PVC.
  key: persistence.persistentVolumeClaim.redis.accessMode
  type: string
- default: '""'
  description: |-
    Use the existing PVC which must be created manually before bound,
    and specify the "subPath" if the PVC is shared with other components
  key: persistence.persistentVolumeClaim.redis.existingClaim
  type: string
- default: 1Gi
  description: Size of the PVC.
  key: persistence.persistentVolumeClaim.redis.size
  type: string
- default: '""'
  description: |-
    Use the existing PVC which must be created manually before bound,
    and specify the "subPath" if the PVC is shared with other components
  key: persistence.persistentVolumeClaim.registry.existingClaim
  type: string
- default: 10Gi
  description: Size of the PVC.
  key: persistence.persistentVolumeClaim.registry.size
  type: string
- default: '""'
  description: |-
    Specify the "storageClass" used to provision the volume. Or the default
    StorageClass will be used(the default).
    Set it to "-" to disable dynamic provisioning
  key: persistence.persistentVolumeClaim.registry.storageClass
  type: string
- default: '""'
  description: The "subPath" if the PVC is shared with other components.
  key: persistence.persistentVolumeClaim.registry.subPath
  type: string
- default: ReadWriteOnce
  description: Access mode of the PVC.
  key: persistence.persistentVolumeClaim.registry.accessMode
  type: string
- default: "false"
  description: Enable cache for Harbor.
  key: cache.enabled
  type: boolean
- default: "24"
  description: The expire hour of cache.
  key: cache.expireHours
  type: integer
- default: ""
  description: The XSRF key. Must be a string of 32 chars.
  key: core.xsrfKey
  type: string
- default: "1"
  description: The replicas for the core component.
  key: core.replicas
  type: integer
- default: ""
  description: Secret is used when core server communicates with other components.
  key: core.secret
  type: string
- default: ""
  description: The initial value of cacheDuration.
  key: exporter.cacheDuration
  type: integer
- default: '""'
  description: HTTP proxy URL.
  key: proxy.httpProxy
  type: string
- default: '""'
  description: HTTPS proxy URL.
  key: proxy.httpsProxy
  type: string
- default: 127.0.0.1,localhost,.local,.internal
  description: Ignore proxy for the domains.
  key: proxy.noProxy
  type: string
- default: "1"
  description: The replicas for the registry component.
  key: registry.replicas
  type: integer
- default: ""
  description: Secret is used to secure the upload state from client and registry
    storage backend.
  key: registry.secret
  type: string
- default: ""
  description: The secret key used for encryption. Must be a string of 16 chars.
  key: secretKey
  type: string
- default: ""
  description: The name of the secret if you want to use your own TLS certificate
    for harbor FQDN, which contains keys named "tls.crt" and "tls.key".
  key: tlsCertificateSecretName
  type: string
- default: ""
  description: The initial value of maxIdleConns
  key: database.maxIdleConns
  type: integer
- default: ""
  description: The initial value of maxOpenConns
  key: database.maxOpenConns
  type: integer
- default: ""
  description: The initial password of the postgres database.
  key: database.password
  type: string
- default: ""
  description: The initial value of shmSizeLimit
  key: database.shmSizeLimit
  type: integer
- default: harbor.yourdomain.com
  description: The FQDN for accessing Harbor admin UI and Registry service.
  key: hostname
  type: string
- default: tanzu-system-registry
  description: The namespace to install Harbor.
  key: namespace
  type: string
